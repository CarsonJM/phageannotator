nextflow_workflow {

    name "Test Workflow PHAGEANNOTATOR"
    script "workflows/phageannotator/main.nf"
    workflow "PHAGEANNOTATOR"
    tag "PHAGEANNOTATOR_NO_REFERENCE"

    // Dependencies
    // local modules
    //tag "SEQKIT_SEQ"
    //tag "APPENDSCREENHITS"
    //tag "QUALITYFILTERVIRUSES"
    //tag "ANICLUSTER_ANICALC"
    //tag "ANICLUSTER_ANICLUST"
    //tag "ANICLUSTER_EXTRACTREPS"
    //tag "COVERM_CONTIG"
    //tag "INSTRAIN_STB"
    // local subworkflows
    //tag "FASTQ_VIRUS_ENRICHMENT_VIROMEQC"
    //tag "FASTQ_FASTA_REFERENCE_CONTAINMENT_MASH"
    //tag "FASTA_VIRUS_CLASSIFICATION_GENOMAD"
    //tag "FASTA_VIRUS_QUALITY_CHECKV"
    //tag "FASTA_ALL_V_ALL_BLAST"
    //tag "FASTA_PHAGE_HOST_IPHOP"
    //tag "FASTA_PHAGE_FUNCTION_PHAROKKA"
    //tag "FASTA_MICRODIVERSITY_INSTRAIN"


    test("Parameters: --reference_virus_fasta = null") {
        when {
            workflow {
                """
                input[0] = Channel.of(
                    [
                        [ id:'test' ],
                        [
                            file(params.modules_testdata_base_path + 'data/genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz', checkIfExists:true),
                            file(params.modules_testdata_base_path + 'data/genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz', checkIfExists: true)
                        ]
                    ],
                    [
                        [ id:'test2' ],
                        [
                            file(params.modules_testdata_base_path + 'data/genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test2_1.fastq.gz', checkIfExists:true),
                            file(params.modules_testdata_base_path + 'data/genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test2_2.fastq.gz', checkIfExists: true)
                        ]
                    ]
                )
                input[1] = Channel.of(
                    [
                        [ id:'test' ],
                        file(params.test_data + 'data/genomics/prokaryotes/bacteroides_fragilis/illumina/fasta/test1.contigs.fa.gz', checkIfExists:true)
                    ],
                    [
                        [ id:'test2' ],
                        file(params.test_data + 'data/genomics/prokaryotes/bacteroides_fragilis/illumina/fasta/test1.contigs.fa.gz', checkIfExists:true)
                    ]
                )
                """
            }
            params {
                outdir = "$outputDir"
                reference_virus_fasta   = null
            }
        }
        then {
            assertAll(
                { assert workflow.trace.succeeded().size() == 0 },
                { assert workflow.stdout.contains("[nf-core/phageannotator] ERROR: reference containment requested, but no --reference_virus_fasta provided") }
            )
        }
    }
}
