nextflow_workflow {

    name "Test workflow: PHAGEANNOTATOR"
    script "workflows/phageannotator/main.nf"
    workflow "PHAGEANNOTATOR"
    tag "workflows"
    tag "phageannotator"
    tag "phageannotator_skip_checkv"


    test("Parameters: skip_checkv = true") {
        when {
            workflow {
                """
                input[0] = Channel.of(
                    [
                        [ id:'test' ],
                        [
                            file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz', checkIfExists:true),
                            file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz', checkIfExists: true)
                        ]
                    ],
                    [
                        [ id:'test2' ],
                        [
                            file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz', checkIfExists:true),
                            file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz', checkIfExists: true)
                        ]
                    ]
                )
                input[1] = Channel.of(
                    [
                        [ id:'test' ],
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fasta/test1.contigs.fa.gz', checkIfExists:true)
                    ],
                    [
                        [ id:'test2' ],
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fasta/test1.contigs.fa.gz', checkIfExists:true)
                    ]
                )
                """
            }
            params {
                outdir                  = "$outputDir"
                skip_checkv             = true
                mash_screen_min_score   = 0.5
                genomad_min_score       = 0.01
                genomad_max_fdr         = 1
                genomad_disable_nn      = true
                genomad_sensitivity     = 0.1
                checkv_minimal_db       = true
                iphop_partial_test      = true
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(workflow.out).match() },
                { assert path("${outputDir}/VirusLifestyle/bacphlip/all_samples_anicluster_representatives.fna.bacphlip").readLines().size() == 5 },
                { assert path("${outputDir}/VirusAbundance/coverm/contig/all_samples_alignment_results.tsv").readLines().size() == 5 }
            )
        }
    }
}
