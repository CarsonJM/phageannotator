nextflow_pipeline {

    name "Test Workflow PHAGEANNOTATOR"
    script "main.nf"
    tag "workflows"
    tag "phageannotator"
    tag "phageannotator_full"


    test("Full phageannotator test") {
        when {
            params {
                outdir = "$outputDir"
                reference_virus_fasta   = 'https://github.com/nf-core/test-datasets/raw/modules/data/genomics/prokaryotes/bacteroides_fragilis/illumina/fasta/test1.contigs.fa.gz'
            }
        }
        then {
            assertAll(
                { assert workflow.success },
                { assert workflow.trace.succeeded().size() == 13 },
                { assert snapshot(NftestUtils.removeNextflowVersion("$outputDir")).match("software_versions") },
                { assert new File("$outputDir/ReadQuality/fastqc/test1_1_fastqc.html").exists() },
                { assert new File("$outputDir/ReadQuality/fastqc/test1_2_fastqc.html").exists() },
                { assert snapshot(path("$outputDir/multiqc/multiqc_data/multiqc_fastqc.txt"),
                                path("$outputDir/multiqc/multiqc_data/multiqc_general_stats.txt")).match("multiqc") },
                { assert snapshot(path("$outputDir/AssemblyFilter").list()).match("seqkit_seq") },
                { assert snapshot(path("$outputDir/ReferenceContainment").list()).match("fastq_fasta_reference_containment_mash") },
                { assert snapshot(path("$outputDir/VirusClassification").list()).match("fasta_virus_classification_genomad") }
            )
        }
    }
}
