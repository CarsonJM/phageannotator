nextflow_pipeline {

    name "Test Workflow main.nf"
    script "main.nf"
    tag "skip_reference_based_id"
    tag "workflow"

    test("skip_reference_based_id test") {

        when {
            params {
                outdir                      = "$outputDir"
                skip_reference_based_id     = true
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(NftestUtils.removeNextflowVersion("$outputDir")).match("software_versions") },
                { assert snapshot(path("$outputDir/DeNovoIdentification/genomad/genomad_db/").list()).match("genomad_download") },
                { assert snapshot(path("$outputDir/DeNovoIdentification/genomad/endtoend/").list()).match("genomad_end_to_end") },
                { assert new File("$outputDir/fastqc/test1_1_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/test1_2_fastqc.html").exists() },
                { assert snapshot(path("$outputDir/multiqc/multiqc_data/multiqc_fastqc.txt"),
                                path("$outputDir/multiqc/multiqc_data/multiqc_general_stats.txt")).match("multiqc") },
            )
        }

    }

}
