nextflow_workflow {

    name "Test Subworkflow: FASTA_MICRODIVERSITY_INSTRAIN"
    script "../main.nf"
    workflow "FASTA_MICRODIVERSITY_INSTRAIN"
    tag "subworkflows"
    tag "subworkflows_local"
    tag "fasta_microdiversity_instrain"
    tag "fasta_microdiversity_instrain_default"
    tag "instrain/compare"
    tag "instrain/profile"
    tag "gunzip"

    test("bam & fasta & stb_file") {

        when {
            params {
                outdir              = "$outputDir"
            }
            workflow {
                """
                input[0] = Channel.of(
                    [
                        [ id:'test' ],
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true)
                    ],
                    [
                        [ id:'test2' ],
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.sorted.bam', checkIfExists: true)
                    ]
                )
                input[1] = Channel.of([
                    [ id: 'reference_fasta' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                    ]
                )
                input[2] = null
                input[3] = Channel.of([
                    [ id: 'instrain_stb' ],
                    file(params.pipelines_testdata_base_path + 'modules/nfcore/instrain/profile/instrain_stb.stb', checkIfExists: true)
                    ]
                )
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(workflow.out).match() }
            )
        }
    }
}
