nextflow_workflow {

    name "Test subworkflow: FASTQ_FASTA_REFERENCE_CONTAINMENT_MASH"
    script "subworkflows/local/fastq_fasta_reference_containment_mash/main.nf"
    workflow "FASTQ_FASTA_REFERENCE_CONTAINMENT_MASH"
    tag "LOCAL_ONLY"

    test("Parameters: --reference_virus_sketch provided") {

        when {
            params {
                outdir                  = "$outputDir"
                reference_virus_fasta   = "$params.test_data['bacteroides_fragilis']['illumina']['test1_contigs_fa_gz']"
                reference_virus_sketch  = "$params.test_data['modules_local']['mash_sketch1_msh']"
            }
            workflow {
                """
                input[0] = Channel.of(
                    [ [ id:'test' ], [ file(params.test_data['bacteroides_fragilis']['illumina']['test1_1_fastq_gz'], checkIfExists:true), file(params.test_data['bacteroides_fragilis']['illumina']['test1_2_fastq_gz'], checkIfExists: true) ] ],
                    [ [ id:'test2' ], [ file(params.test_data['bacteroides_fragilis']['illumina']['test2_1_fastq_gz'], checkIfExists:true), file(params.test_data['bacteroides_fragilis']['illumina']['test2_2_fastq_gz'], checkIfExists: true) ] ]
                )
                input[1] = Channel.of([ [ id:'test' ], [ file(params.test_data['bacteroides_fragilis']['genome']['genome_fna_gz'], checkIfExists:true) ] ], [ [ id:'test2' ], [ file(params.test_data['bacteroides_fragilis']['genome']['genome_fna_gz'], checkIfExists:true) ] ])
                input[2] = Channel.of([ [ id:'reference_viruses' ], [ file(params.test_data['bacteroides_fragilis']['illumina']['test1_contigs_fa_gz'], checkIfExists:true) ] ])
                input[3] = Channel.of([ [ id:'reference_viruses' ], [ file(params.test_data['modules_local']['mash_sketch1_msh'], checkIfExists:true) ] ])
                """
            }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(workflow.out).match() }
                )
            }
        }
    }
}
